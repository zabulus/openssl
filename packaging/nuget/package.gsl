.#  Generate NuGet nuspec file (for subsequent packing).
.#
.#  This is a code generator built using the iMatix GSL code generation
.#  language. See https://github.com/imatix/gsl for details. This script
.#  is licensed under MIT/X11.
.#
.echo "Generating package.nuspec from template."
.output "package.nuspec"
<?xml version="1.0" encoding="utf-8"?>
<!--
#################################################################
#   GENERATED SOURCE CODE, DO NOT EDIT EXCEPT EXPERIMENTALLY    #
#################################################################
-->
<package xmlns="http://schemas.microsoft.com/packaging/2013/01/nuspec.xsd">
    <metadata minClientVersion="2.5">
        <id>$(package.id)</id>
        <version>$(package.version)</version>
        <title>$(package.id)</title>
        <authors>The OpenSSL Project, Eric A. Young and Tim J. Hudson</authors>
        <owners>Eric Voskuil</owners>
        <licenseUrl>https://raw.github.com/openssl/openssl/master/LICENSE</licenseUrl>
        <projectUrl>http://www.openssl.org</projectUrl>
        <iconUrl>http://upload.wikimedia.org/wikipedia/commons/thumb/f/fc/EFF_version_of_NSA_logo.jpg/200px-EFF_version_of_NSA_logo.jpg</iconUrl>
        <requireLicenseAcceptance>true</requireLicenseAcceptance>
        <developmentDependency>false</developmentDependency>
        <description>The OpenSSL Project is a commercial-grade, full-featured, and Open Source toolkit implementing the Secure Sockets Layer (SSL v2/v3) and Transport Layer Security (TLS v1) protocols as well as a full-strength general purpose cryptography library.</description>
        <summary>This is OpenSSL 1.0.1g, unmodified, in the default build configuration. Supports Visual Studio 2013 (v120) compiler.</summary>
        <releaseNotes>https://raw.github.com/openssl/openssl/master/NEWS</releaseNotes>
        <copyright>The OpenSSL Project and Eric Young</copyright>
        <tags>native, openssl, crypto, ssl, tls, hash, cipher, ecdsa, RSA, C++</tags>
    </metadata>
    <files>
        <!-- targets -->
      
        <file src="package.targets" target="build\\native\\$(package.id).targets" />
        <file src="package.xml" target="build\\native\\package.xml" />

        <!-- include -->
		
        <file src="..\\..\\inc32\\openssl\\*.*" target="build\\native\\include\\openssl" />
        
        <!-- libraries -->

        <!-- x86 Dynamic libraries (.dll) -->
        <file src="..\\..\\out32dll\\$(package.libssl)32.dll" target="build\\native\\bin\\$(package.libssl)-x86-$(package.platformtoolset)-mt-$(package.pathversion).dll" />
        <file src="..\\..\\out32dll\\$(package.libcrypto)32.dll" target="build\\native\\bin\\$(package.libcrypto)-x86-$(package.platformtoolset)-mt-$(package.pathversion).dll" />
        <file src="..\\..\\out32dll.dbg\\$(package.libssl)32.dll" target="build\\native\\bin\\$(package.libssl)-x86-$(package.platformtoolset)-mt-gd-$(package.pathversion).dll" />
        <file src="..\\..\\out32dll.dbg\\$(package.libcrypto)32.dll" target="build\\native\\bin\\$(package.libcrypto)-x86-$(package.platformtoolset)-mt-gd-$(package.pathversion).dll" />

        <!-- x86 Debugging symbols (.pdb) -->
        <file src="..\\..\\out32dll\\$(package.libssl)32.pdb" target="build\\native\\bin\\$(package.libssl)-x86-$(package.platformtoolset)-mt-$(package.pathversion).pdb" />
        <file src="..\\..\\out32dll\\$(package.libcrypto)32.pdb" target="build\\native\\bin\\$(package.libcrypto)-x86-$(package.platformtoolset)-mt-$(package.pathversion).pdb" />
        <file src="..\\..\\out32dll.dbg\\$(package.libssl)32.pdb" target="build\\native\\bin\\$(package.libssl)-x86-$(package.platformtoolset)-mt-gd-$(package.pathversion).pdb" />  
        <file src="..\\..\\out32dll.dbg\\$(package.libcrypto)32.pdb" target="build\\native\\bin\\$(package.libcrypto)-x86-$(package.platformtoolset)-mt-gd-$(package.pathversion).pdb" />        

        <!-- x86 Static libraries (.lib) -->
        <file src="..\\..\\out32\\$(package.libssl)32.lib" target="build\\native\\bin\\$(package.libssl)-x86-$(package.platformtoolset)-mt-s-$(package.pathversion).lib" />
        <file src="..\\..\\out32\\$(package.libcrypto)32.lib" target="build\\native\\bin\\$(package.libcrypto)-x86-$(package.platformtoolset)-mt-s-$(package.pathversion).lib" />
        <file src="..\\..\\out32.dbg\\$(package.libssl)32.lib" target="build\\native\\bin\\$(package.libssl)-x86-$(package.platformtoolset)-mt-sgd-$(package.pathversion).lib" />
        <file src="..\\..\\out32.dbg\\$(package.libcrypto)32.lib" target="build\\native\\bin\\$(package.libcrypto)-x86-$(package.platformtoolset)-mt-sgd-$(package.pathversion).lib" />

        <!-- x86 Import libraries (.imp.lib) -->
        <file src="..\\..\\out32dll\\$(package.libssl)32.lib" target="build\\native\\bin\\$(package.libssl)-x86-$(package.platformtoolset)-mt-$(package.pathversion).imp.lib" />
        <file src="..\\..\\out32dll\\$(package.libcrypto)32.lib" target="build\\native\\bin\\$(package.libcrypto)-x86-$(package.platformtoolset)-mt-$(package.pathversion).imp.lib" />
        <file src="..\\..\\out32dll.dbg\\$(package.libssl)32.lib" target="build\\native\\bin\\$(package.libssl)-x86-$(package.platformtoolset)-mt-gd-$(package.pathversion).imp.lib" />
        <file src="..\\..\\out32dll.dbg\\$(package.libcrypto)32.lib" target="build\\native\\bin\\$(package.libcrypto)-x86-$(package.platformtoolset)-mt-gd-$(package.pathversion).imp.lib" />

        <!-- x86 Export libraries (.exp) -->
        <file src="..\\..\\out32dll\\$(package.libssl)32.exp" target="build\\native\\bin\\$(package.libssl)-x86-$(package.platformtoolset)-mt-$(package.pathversion).exp" />
        <file src="..\\..\\out32dll\\$(package.libcrypto)32.exp" target="build\\native\\bin\\$(package.libcrypto)-x86-$(package.platformtoolset)-mt-$(package.pathversion).exp" />
        <file src="..\\..\\out32dll.dbg\\$(package.libssl)32.exp" target="build\\native\\bin\\$(package.libssl)-x86-$(package.platformtoolset)-mt-gd-$(package.pathversion).exp" />
        <file src="..\\..\\out32dll.dbg\\$(package.libcrypto)32.exp" target="build\\native\\bin\\$(package.libcrypto)-x86-$(package.platformtoolset)-mt-gd-$(package.pathversion).exp" />

        <!-- x64 Dynamic libraries (.dll) -->
        <file src="..\\..\\out64dll\\$(package.libssl)32.dll" target="build\\native\\bin\\$(package.libssl)-x64-$(package.platformtoolset)-mt-$(package.pathversion).dll" />
        <file src="..\\..\\out64dll\\$(package.libcrypto)32.dll" target="build\\native\\bin\\$(package.libcrypto)-x64-$(package.platformtoolset)-mt-$(package.pathversion).dll" />
        <file src="..\\..\\out64dll.dbg\\$(package.libssl)32.dll" target="build\\native\\bin\\$(package.libssl)-x64-$(package.platformtoolset)-mt-gd-$(package.pathversion).dll" />
        <file src="..\\..\\out64dll.dbg\\$(package.libcrypto)32.dll" target="build\\native\\bin\\$(package.libcrypto)-x64-$(package.platformtoolset)-mt-gd-$(package.pathversion).dll" />

        <!-- x64 Debugging symbols (.pdb) -->
        <file src="..\\..\\out64dll\\$(package.libssl)32.pdb" target="build\\native\\bin\\$(package.libssl)-x64-$(package.platformtoolset)-mt-$(package.pathversion).pdb" />
        <file src="..\\..\\out64dll\\$(package.libcrypto)32.pdb" target="build\\native\\bin\\$(package.libcrypto)-x64-$(package.platformtoolset)-mt-$(package.pathversion).pdb" />
        <file src="..\\..\\out64dll.dbg\\$(package.libssl)32.pdb" target="build\\native\\bin\\$(package.libssl)-x64-$(package.platformtoolset)-mt-gd-$(package.pathversion).pdb" />  
        <file src="..\\..\\out64dll.dbg\\$(package.libcrypto)32.pdb" target="build\\native\\bin\\$(package.libcrypto)-x64-$(package.platformtoolset)-mt-gd-$(package.pathversion).pdb" />           

        <!-- x64 Static libraries (.lib) -->
        <file src="..\\..\\out64\\$(package.libssl)32.lib" target="build\\native\\bin\\$(package.libssl)-x64-$(package.platformtoolset)-mt-s-$(package.pathversion).lib" />
        <file src="..\\..\\out64\\$(package.libcrypto)32.lib" target="build\\native\\bin\\$(package.libcrypto)-x64-$(package.platformtoolset)-mt-s-$(package.pathversion).lib" />
        <file src="..\\..\\out64.dbg\\$(package.libssl)32.lib" target="build\\native\\bin\\$(package.libssl)-x64-$(package.platformtoolset)-mt-sgd-$(package.pathversion).lib" />
        <file src="..\\..\\out64.dbg\\$(package.libcrypto)32.lib" target="build\\native\\bin\\$(package.libcrypto)-x64-$(package.platformtoolset)-mt-sgd-$(package.pathversion).lib" />

        <!-- x64 Import libraries (.imp.lib) -->
        <file src="..\\..\\out64dll\\$(package.libssl)32.lib" target="build\\native\\bin\\$(package.libssl)-x64-$(package.platformtoolset)-mt-$(package.pathversion).imp.lib" />
        <file src="..\\..\\out64dll\\$(package.libcrypto)32.lib" target="build\\native\\bin\\$(package.libcrypto)-x64-$(package.platformtoolset)-mt-$(package.pathversion).imp.lib" />
        <file src="..\\..\\out64dll.dbg\\$(package.libssl)32.lib" target="build\\native\\bin\\$(package.libssl)-x64-$(package.platformtoolset)-mt-gd-$(package.pathversion).imp.lib" />
        <file src="..\\..\\out64dll.dbg\\$(package.libcrypto)32.lib" target="build\\native\\bin\\$(package.libcrypto)-x64-$(package.platformtoolset)-mt-gd-$(package.pathversion).imp.lib" />

        <!-- x64 Export libraries (.exp) -->
        <file src="..\\..\\out64dll\\$(package.libssl)32.exp" target="build\\native\\bin\\$(package.libssl)-x64-$(package.platformtoolset)-mt-$(package.pathversion).exp" />
        <file src="..\\..\\out64dll\\$(package.libcrypto)32.exp" target="build\\native\\bin\\$(package.libcrypto)-x64-$(package.platformtoolset)-mt-$(package.pathversion).exp" />
        <file src="..\\..\\out64dll.dbg\\$(package.libssl)32.exp" target="build\\native\\bin\\$(package.libssl)-x64-$(package.platformtoolset)-mt-gd-$(package.pathversion).exp" />
        <file src="..\\..\\out64dll.dbg\\$(package.libcrypto)32.exp" target="build\\native\\bin\\$(package.libcrypto)-x64-$(package.platformtoolset)-mt-gd-$(package.pathversion).exp" />
                
        <!-- tools -->
        
        <!-- Tools (.exe) -->
        <file src="..\\..\\out32\\openssl.exe" target="tools" />
        
        <!-- docs -->
        
        <!-- Documents (.*) -->
        <!--<file src="..\\..\\docs\\*" target="build\\native\\docs" />-->
    </files>
<!--
#################################################################
#   GENERATED SOURCE CODE, DO NOT EDIT EXCEPT EXPERIMENTALLY    #
#################################################################
-->
</package>
.echo "Generating package.targets from template."
.output "package.targets"
<?xml version="1.0" encoding="utf-8"?>
<!--
#################################################################
#   GENERATED SOURCE CODE, DO NOT EDIT EXCEPT EXPERIMENTALLY    #
#################################################################
-->
<Project ToolsVersion="12.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <!-- user interface -->
  <ItemGroup>
    <PropertyPageSchema Include="$\(MSBuildThisFileDirectory)package.xml" />
  </ItemGroup>

  <!-- general -->
  <ItemDefinitionGroup>
    <ClCompile>
      <AdditionalIncludeDirectories>$\(MSBuildThisFileDirectory)include\\;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ClCompile>
    <Link>
      <AdditionalLibraryDirectories>$\(MSBuildThisFileDirectory)bin\\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>ws2_32.lib;gdi32.lib;advapi32.lib;crypt32.lib;user32.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
  </ItemDefinitionGroup>

  <!-- static libraries -->
  <ItemDefinitionGroup Condition="'$\(Platform)' == 'Win32' And ('$\(PlatformToolset)' == '$(package.platformtoolset)' Or '$\(PlatformToolset)' == 'CTP_Nov2013') And '$\(Linkage-$(package.target))' == 'static' And $\(Configuration.IndexOf('Release')) != -1">
    <Link>
      <AdditionalDependencies>$(package.libssl)-x86-$(package.platformtoolset)-mt-s-$(package.pathversion).lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalDependencies>$(package.libcrypto)-x86-$(package.platformtoolset)-mt-s-$(package.pathversion).lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$\(Platform)' == 'Win32' And ('$\(PlatformToolset)' == '$(package.platformtoolset)' Or '$\(PlatformToolset)' == 'CTP_Nov2013') And '$\(Linkage-$(package.target))' == 'static' And $\(Configuration.IndexOf('Debug')) != -1">
    <Link>
      <AdditionalDependencies>$(package.libssl)-x86-$(package.platformtoolset)-mt-sgd-$(package.pathversion).lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalDependencies>$(package.libcrypto)-x86-$(package.platformtoolset)-mt-sgd-$(package.pathversion).lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$\(Platform)' == 'x64' And ('$\(PlatformToolset)' == '$(package.platformtoolset)' Or '$\(PlatformToolset)' == 'CTP_Nov2013') And '$\(Linkage-$(package.target))' == 'static' And $\(Configuration.IndexOf('Release')) != -1">
    <Link>
      <AdditionalDependencies>$(package.libssl)-x64-$(package.platformtoolset)-mt-s-$(package.pathversion).lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalDependencies>$(package.libcrypto)-x64-$(package.platformtoolset)-mt-s-$(package.pathversion).lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$\(Platform)' == 'x64' And ('$\(PlatformToolset)' == '$(package.platformtoolset)' Or '$\(PlatformToolset)' == 'CTP_Nov2013') And '$\(Linkage-$(package.target))' == 'static' And $\(Configuration.IndexOf('Debug')) != -1">
    <Link>
      <AdditionalDependencies>$(package.libssl)-x64-$(package.platformtoolset)-mt-sgd-$(package.pathversion).lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalDependencies>$(package.libcrypto)-x64-$(package.platformtoolset)-mt-sgd-$(package.pathversion).lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
  </ItemDefinitionGroup>

  <!-- dynamic import libraries -->
  <ItemDefinitionGroup Condition="'$\(Platform)' == 'Win32' And ('$\(PlatformToolset)' == '$(package.platformtoolset)' Or '$\(PlatformToolset)' == 'CTP_Nov2013') And '$\(Linkage-$(package.target))' == 'dynamic' And $\(Configuration.IndexOf('Release')) != -1">
    <Link>
      <AdditionalDependencies>$(package.libssl)-x86-$(package.platformtoolset)-mt-$(package.pathversion).imp.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalDependencies>$(package.libcrypto)-x86-$(package.platformtoolset)-mt-$(package.pathversion).imp.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$\(Platform)' == 'Win32' And ('$\(PlatformToolset)' == '$(package.platformtoolset)' Or '$\(PlatformToolset)' == 'CTP_Nov2013') And '$\(Linkage-$(package.target))' == 'dynamic' And $\(Configuration.IndexOf('Debug')) != -1">
    <Link>
      <AdditionalDependencies>$(package.libssl)-x86-$(package.platformtoolset)-mt-gd-$(package.pathversion).imp.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalDependencies>$(package.libcrypto)-x86-$(package.platformtoolset)-mt-gd-$(package.pathversion).imp.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$\(Platform)' == 'x64' And ('$\(PlatformToolset)' == '$(package.platformtoolset)' Or '$\(PlatformToolset)' == 'CTP_Nov2013') And '$\(Linkage-$(package.target))' == 'dynamic' And $\(Configuration.IndexOf('Release')) != -1">
    <Link>
      <AdditionalDependencies>$(package.libssl)-x64-$(package.platformtoolset)-mt-$(package.pathversion).imp.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalDependencies>$(package.libcrypto)-x64-$(package.platformtoolset)-mt-$(package.pathversion).imp.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$\(Platform)' == 'x64' And ('$\(PlatformToolset)' == '$(package.platformtoolset)' Or '$\(PlatformToolset)' == 'CTP_Nov2013') And '$\(Linkage-$(package.target))' == 'dynamic' And $\(Configuration.IndexOf('Debug')) != -1">
    <Link>
      <AdditionalDependencies>$(package.libssl)-x64-$(package.platformtoolset)-mt-gd-$(package.pathversion).imp.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalDependencies>$(package.libcrypto)-x64-$(package.platformtoolset)-mt-gd-$(package.pathversion).imp.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
  </ItemDefinitionGroup>

  <!-- dynamic libraries with debug symbols -->
  <Target Name="$(package.target)_AfterBuild" AfterTargets="AfterBuild" />
  <Target Name="$(package.target)_AfterBuild_Win32_$(package.platformtoolset)_Dynamic_Release"
          Condition="'$\(Platform)' == 'Win32' And ('$\(PlatformToolset)' == '$(package.platformtoolset)' Or '$\(PlatformToolset)' == 'CTP_Nov2013') And '$\(Linkage-$(package.target))' == 'dynamic' And $\(Configuration.IndexOf('Release')) != -1"
          AfterTargets="$(package.target)_AfterBuild">
    <Copy SourceFiles="$\(MSBuildThisFileDirectory)bin\\$(package.libssl)-x86-$(package.platformtoolset)-mt-$(package.pathversion).dll" DestinationFolder="$\(TargetDir)" SkipUnchangedFiles="true" />
    <Copy SourceFiles="$\(MSBuildThisFileDirectory)bin\\$(package.libssl)-x86-$(package.platformtoolset)-mt-$(package.pathversion).pdb" DestinationFolder="$\(TargetDir)" SkipUnchangedFiles="true" />
    <Copy SourceFiles="$\(MSBuildThisFileDirectory)bin\\$(package.libcrypto)-x86-$(package.platformtoolset)-mt-$(package.pathversion).dll" DestinationFolder="$\(TargetDir)" SkipUnchangedFiles="true" />
    <Copy SourceFiles="$\(MSBuildThisFileDirectory)bin\\$(package.libcrypto)-x86-$(package.platformtoolset)-mt-$(package.pathversion).pdb" DestinationFolder="$\(TargetDir)" SkipUnchangedFiles="true" />
  </Target>
  <Target Name="$(package.target)_AfterBuild_Win32_$(package.platformtoolset)_Dynamic_Debug"
          Condition="'$\(Platform)' == 'Win32' And ('$\(PlatformToolset)' == '$(package.platformtoolset)' Or '$\(PlatformToolset)' == 'CTP_Nov2013') And '$\(Linkage-$(package.target))' == 'dynamic' And $\(Configuration.IndexOf('Debug')) != -1"
          AfterTargets="$(package.target)_AfterBuild">
    <Copy SourceFiles="$\(MSBuildThisFileDirectory)bin\\$(package.libssl)-x86-$(package.platformtoolset)-mt-gd-$(package.pathversion).dll" DestinationFolder="$\(TargetDir)" SkipUnchangedFiles="true" />
    <Copy SourceFiles="$\(MSBuildThisFileDirectory)bin\\$(package.libssl)-x86-$(package.platformtoolset)-mt-gd-$(package.pathversion).pdb" DestinationFolder="$\(TargetDir)" SkipUnchangedFiles="true" />
    <Copy SourceFiles="$\(MSBuildThisFileDirectory)bin\\$(package.libcrypto)-x86-$(package.platformtoolset)-mt-gd-$(package.pathversion).dll" DestinationFolder="$\(TargetDir)" SkipUnchangedFiles="true" />
    <Copy SourceFiles="$\(MSBuildThisFileDirectory)bin\\$(package.libcrypto)-x86-$(package.platformtoolset)-mt-gd-$(package.pathversion).pdb" DestinationFolder="$\(TargetDir)" SkipUnchangedFiles="true" />
  </Target>
  <Target Name="$(package.target)_AfterBuild_x64_$(package.platformtoolset)_Dynamic_Release"
          Condition="'$\(Platform)' == 'x64' And ('$\(PlatformToolset)' == '$(package.platformtoolset)' Or '$\(PlatformToolset)' == 'CTP_Nov2013') And '$\(Linkage-$(package.target))' == 'dynamic' And $\(Configuration.IndexOf('Release')) != -1"
          AfterTargets="$(package.target)_AfterBuild">
    <Copy SourceFiles="$\(MSBuildThisFileDirectory)bin\\$(package.libssl)-x64-$(package.platformtoolset)-mt-$(package.pathversion).dll" DestinationFolder="$\(TargetDir)" SkipUnchangedFiles="true" />
    <Copy SourceFiles="$\(MSBuildThisFileDirectory)bin\\$(package.libssl)-x64-$(package.platformtoolset)-mt-$(package.pathversion).pdb" DestinationFolder="$\(TargetDir)" SkipUnchangedFiles="true" />
    <Copy SourceFiles="$\(MSBuildThisFileDirectory)bin\\$(package.libcrypto)-x64-$(package.platformtoolset)-mt-$(package.pathversion).dll" DestinationFolder="$\(TargetDir)" SkipUnchangedFiles="true" />
    <Copy SourceFiles="$\(MSBuildThisFileDirectory)bin\\$(package.libcrypto)-x64-$(package.platformtoolset)-mt-$(package.pathversion).pdb" DestinationFolder="$\(TargetDir)" SkipUnchangedFiles="true" />
  </Target>
  <Target Name="$(package.target)_AfterBuild_x64_$(package.platformtoolset)_Dynamic_Debug"
          Condition="'$\(Platform)' == 'x64' And ('$\(PlatformToolset)' == '$(package.platformtoolset)' Or '$\(PlatformToolset)' == 'CTP_Nov2013') And '$\(Linkage-$(package.target))' == 'dynamic' And $\(Configuration.IndexOf('Debug')) != -1"
          AfterTargets="$(package.target)_AfterBuild">
    <Copy SourceFiles="$\(MSBuildThisFileDirectory)bin\\$(package.libssl)-x64-$(package.platformtoolset)-mt-gd-$(package.pathversion).dll" DestinationFolder="$\(TargetDir)" SkipUnchangedFiles="true" />
    <Copy SourceFiles="$\(MSBuildThisFileDirectory)bin\\$(package.libssl)-x64-$(package.platformtoolset)-mt-gd-$(package.pathversion).pdb" DestinationFolder="$\(TargetDir)" SkipUnchangedFiles="true" />
    <Copy SourceFiles="$\(MSBuildThisFileDirectory)bin\\$(package.libcrypto)-x64-$(package.platformtoolset)-mt-gd-$(package.pathversion).dll" DestinationFolder="$\(TargetDir)" SkipUnchangedFiles="true" />
    <Copy SourceFiles="$\(MSBuildThisFileDirectory)bin\\$(package.libcrypto)-x64-$(package.platformtoolset)-mt-gd-$(package.pathversion).pdb" DestinationFolder="$\(TargetDir)" SkipUnchangedFiles="true" />
  </Target>

<!--
#################################################################
#   GENERATED SOURCE CODE, DO NOT EDIT EXCEPT EXPERIMENTALLY    #
#################################################################
-->
</Project>
.echo "Generating package.xml (ui extension) from template."
.output "package.xml"
<?xml version="1.0" encoding="utf-8"?>
<!--
#################################################################
#   GENERATED SOURCE CODE, DO NOT EDIT EXCEPT EXPERIMENTALLY    #
#################################################################
-->
<ProjectSchemaDefinitions xmlns="clr-namespace:Microsoft.Build.Framework.XamlTypes;assembly=Microsoft.Build.Framework">
  <Rule Name="$(package.target)-uiextension" PageTemplate="tool" DisplayName="NuGet Dependencies" SwitchPrefix="/" Order="1">
    <Rule.Categories>
      <Category Name="$(package.target)" DisplayName="$(package.target)" />
    </Rule.Categories>
    <Rule.DataSource>
      <DataSource Persistence="ProjectFile" ItemType="" />
    </Rule.DataSource>
      <EnumProperty Name="Linkage-$(package.target)" DisplayName="Linkage" Description="How $(package.target) will be linked into the output of this project" Category="$(package.target)">
        <EnumValue Name="" DisplayName="Not linked" />
        <EnumValue Name="dynamic" DisplayName="Dynamic (DLL)" />
        <EnumValue Name="static" DisplayName="Static (LIB)" />
        <EnumValue Name="ltcg" DisplayName="Static using link time compile generation (LTCG)" />
    </EnumProperty>
  </Rule>
</ProjectSchemaDefinitions>